generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  username String    @unique
  nickname String?   @default("nickname")
  password String
  email    String
  photo    String    @default("user")
  telegram String    @unique
  salt     String
  Chats    Chat[]
  User1    Dialog[]  @relation("user1_chat")
  User2    Dialog[]  @relation("user2_chat")
  Message  Message[]
}

model VerifyToken {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  value    String @unique
  password String
  salt     String
  username String @unique
  email    String @unique
}

model Message {
  id Int @id @default(autoincrement())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sender User @relation(fields: [senderId], references: [id])

  message String

  senderId Int
  Dialog   Dialog? @relation(fields: [dialogId], references: [id])
  dialogId Int?
}

model Dialog {
  id Int @id @default(autoincrement())
  DialogName String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user1Id Int
  user2Id Int

  user1Name String
  user2Name String

  user1 User @relation("user1_chat", fields: [user1Id], references: [id])
  user2 User @relation("user2_chat", fields: [user2Id], references: [id])

  messages Message[]
  secret   String
}

model Chat {
  id Int @id @default(autoincrement())
  ChatName String @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users User[]

  secret   String
}
